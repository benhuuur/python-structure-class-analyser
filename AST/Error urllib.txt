ClassDef(
    name='HTTPError',
    bases=[
        Name(id='URLError', ctx=Load()),
        Attribute(
            value=Attribute(
                value=Name(id='urllib', ctx=Load()),
                attr='response',
                ctx=Load()
            ),
            attr='addinfourl',
            ctx=Load()
        )
    ],
    keywords=[],
    body=[
        Expr(value=Constant(value='Raised when HTTP error occurs, but also acts like non-error return')),
        Assign(
            targets=[Name(id='__super_init', ctx=Store())],
            value=Attribute(
                value=Attribute(
                    value=Attribute(
                        value=Name(id='urllib', ctx=Load()),
                        attr='response',
                        ctx=Load()
                    ),
                    attr='addinfourl',
                    ctx=Load()
                ),
                attr='__init__',
                ctx=Load()
            )
        ),
        FunctionDef(
            name='__init__',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='self'),
                    arg(arg='url'),
                    arg(arg='code'),
                    arg(arg='msg'),
                    arg(arg='hdrs'),
                    arg(arg='fp')
                ],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]
            ),
            body=[
                Assign(
                    targets=[Attribute(value=Name(id='self', ctx=Load()), attr='code', ctx=Store())],
                    value=Name(id='code', ctx=Load())
                ),
                Assign(
                    targets=[Attribute(value=Name(id='self', ctx=Load()), attr='msg', ctx=Store())],
                    value=Name(id='msg', ctx=Load())
                ),
                Assign(
                    targets=[Attribute(value=Name(id='self', ctx=Load()), attr='hdrs', ctx=Store())],
                    value=Name(id='hdrs', ctx=Load())
                ),
                Assign(
                    targets=[Attribute(value=Name(id='self', ctx=Load()), attr='fp', ctx=Store())],
                    value=Name(id='fp', ctx=Load())
                ),
                Assign(
                    targets=[Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Store())],
                    value=Name(id='url', ctx=Load())
                ),
                If(
                    test=Compare(
                        left=Name(id='fp', ctx=Load()),
                        ops=[IsNot()],
                        comparators=[Constant(value=None)]
                    ),
                    body=[
                        Expr(
                            value=Call(
                                func=Attribute(value=Name(id='self', ctx=Load()), attr='__super_init', ctx=Load()),
                                args=[
                                    Name(id='fp', ctx=Load()),
                                    Name(id='hdrs', ctx=Load()),
                                    Name(id='url', ctx=Load()),
                                    Name(id='code', ctx=Load())
                                ],
                                keywords=[]
                            )
                        )
                    ],
                    orelse=[]
                )
            ],
            decorator_list=[]
        ),
        FunctionDef(
            name='__str__',
            args=arguments(
                posonlyargs=[],
                args=[arg(arg='self')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]
            ),
            body=[
                Return(
                    value=BinOp(
                        left=Constant(value='HTTP Error %s: %s'),
                        op=Mod(),
                        right=Tuple(
                            elts=[
                                Attribute(value=Name(id='self', ctx=Load()), attr='code', ctx=Load()),
                                Attribute(value=Name(id='self', ctx=Load()), attr='msg', ctx=Load())
                            ],
                            ctx=Load()
                        )
                    )
                )
            ],
            decorator_list=[]
        ),
        FunctionDef(
            name='__repr__',
            args=arguments(
                posonlyargs=[],
                args=[arg(arg='self')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]
            ),
            body=[
                Return(
                    value=BinOp(
                        left=Constant(value='<HTTPError %s: %r>'),
                        op=Mod(),
                        right=Tuple(
                            elts=[
                                Attribute(value=Name(id='self', ctx=Load()), attr='code', ctx=Load()),
                                Attribute(value=Name(id='self', ctx=Load()), attr='msg', ctx=Load())
                            ],
                            ctx=Load()
                        )
                    )
                )
            ],
            decorator_list=[]
        ),
        FunctionDef(
            name='reason',
            args=arguments(
                posonlyargs=[],
                args=[arg(arg='self')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]
            ),
            body=[
                Return(
                    value=Attribute(value=Name(id='self', ctx=Load()), attr='msg', ctx=Load())
                )
            ],
            decorator_list=[Name(id='property', ctx=Load())]
        ),
        FunctionDef(
            name='headers',
            args=arguments(
                posonlyargs=[],
                args=[arg(arg='self')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]
            ),
            body=[
                Return(
                    value=Attribute(value=Name(id='self', ctx=Load()), attr='hdrs', ctx=Load())
                )
            ],
            decorator_list=[Name(id='property', ctx=Load())]
        ),
        FunctionDef(
            name='headers',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='self'),
                    arg(arg='headers')
                ],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]
            ),
            body=[
                Assign(
                    targets=[Attribute(value=Name(id='self', ctx=Load()), attr='hdrs', ctx=Store())],
                    value=Name(id='headers', ctx=Load())
                )
            ],
            decorator_list=[Attribute(value=Name(id='headers', ctx=Load()), attr='setter', ctx=Load())]
        )
    ],
    decorator_list=[]
)

Traceback (most recent call last):
  File "c:\Users\aluno\Desktop\python-structure-generator\dir_explorer.py", line 95, in <module>
    classes += AST_handler.get_classes(tree.body)
  File "c:\Users\aluno\Desktop\python-structure-generator\AST\AST_handler.py", line 70, in get_classes
    for assignment in AST_handler._get_init_assignment(node.body):
  File "c:\Users\aluno\Desktop\python-structure-generator\AST\AST_handler.py", line 253, in _get_init_assignment
    return AST_handler.get_assignments(statement.body)
  File "c:\Users\aluno\Desktop\python-structure-generator\AST\AST_handler.py", line 128, in get_assignments
    for assignment in AST_handler._get_assignment(statement):
  File "c:\Users\aluno\Desktop\python-structure-generator\AST\AST_handler.py", line 155, in _get_assignment
    return [assignments_info(name=assignment_names[0], data_type=assignment_data_type[0], encapsulation=assignment_encapsulation[0])]
IndexError: list index out of range